{"version":3,"sources":["CharInfo.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["CharInfo","props","open","setState","expanded","state","close","info","this","charInfo","className","onClick","gender","birth_year","height","mass","Component","List","people","map","p","console","log","name","url","App","getPeople","axios","get","then","response","data","results","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAsCeA,E,kDAnCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,KAAO,WACH,EAAKC,SAAS,CAACC,UAAW,EAAKC,MAAMD,YATvB,EAYlBE,MAAQ,WACJ,EAAKH,SAAS,CAACC,UAAW,EAAKC,MAAMD,YAVrC,EAAKC,MAAQ,CACTD,UAAU,GAJA,E,qDAiBd,IAAMG,EAAOC,KAAKP,MAAMQ,SACxB,OAAID,KAAKH,MAAMD,SAIX,sBAAKM,UAAU,eAAf,UACI,mBAAGA,UAAU,iBAAiBC,QAASH,KAAKF,MAA5C,uBACA,+BACI,6BAAI,0CAAaC,EAAKK,YACtB,6BAAI,8CAAiBL,EAAKM,gBAC1B,6BAAI,0CAAaN,EAAKO,YACtB,6BAAI,wCAAWP,EAAKQ,gBATrB,mBAAGL,UAAU,eAAeC,QAASH,KAAKN,KAA1C,2B,GApBIc,aCsBRC,E,uKAnBP,IAAMC,EAASV,KAAKP,MAAMiB,OAC1B,OACI,qBAAKR,UAAU,GAAf,SAEQQ,EAAOC,KAAI,SAACC,GAER,OADAC,QAAQC,IAAIF,GAER,gCACI,oBAAIV,UAAU,YAAd,SAA2BU,EAAEG,OAC7B,cAAC,EAAD,CAAUd,SAAUW,MAFdA,EAAEI,c,GATrBR,aCiCJS,E,kDA/Bb,WAAYxB,GAAO,IAAD,8BAChB,cAAMA,IAORyB,UAAY,WACV,OAAOC,IAAMC,IAAI,gCAChBC,MAAK,SAACC,GACLT,QAAQC,IAAIQ,EAASC,KAAKC,SAC1B,EAAK7B,SAAU,CAACe,OAAOY,EAASC,KAAKC,cATvC,EAAK3B,MAAQ,CACXa,OAAQ,IAJM,E,gEAiBhBV,KAAKkB,c,+BAGG,IACDR,EAAUV,KAAKH,MAAfa,OAEP,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,CAAMQ,OAAUA,U,GA1BNF,aCQHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.953e502e.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass CharInfo extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            expanded: false,\n        }\n    }\n\n    open = () => {\n        this.setState({expanded: !this.state.expanded})\n    }\n\n    close = () => {\n        this.setState({expanded: !this.state.expanded})\n    }\n\n    render() {\n        const info = this.props.charInfo;\n        if(!this.state.expanded){\n            return <p className=\"btn btn-info\" onClick={this.open}>Show Info</p>\n        }\n        return(\n            <div className=\"user-details\">\n                <p className=\"btn btn-danger\" onClick={this.close}>Hide Info</p>\n                <ul>\n                    <li><h2>Gender: {info.gender}</h2></li>\n                    <li><h2>Birth date: {info.birth_year}</h2></li>\n                    <li><h2>Height: {info.height}</h2></li>\n                    <li><h2>Mass: {info.mass}</h2></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default CharInfo;","import React, {Component} from 'react';\nimport CharInfo from './CharInfo';\n\nclass List extends Component{\n    render() {\n        const people = this.props.people;\n        return (\n            <div className=\"\">\n                {\n                    people.map((p) => {\n                        console.log(p)\n                        return (\n                            <div key={p.url}>\n                                <h1 className=\"char-name\">{p.name}</h1>\n                                <CharInfo charInfo={p} />\n                            </div>\n\n                        )\n                    })\n                }  \n            </div>\n        );\n    }\n}\nexport default List;","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport List from './List';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      people: [],\n    }\n  }\n\n  getPeople = () => {\n    return axios.get(\"https://swapi.dev/api/people\")\n    .then((response) => {\n      console.log(response.data.results);\n      this.setState( {people:response.data.results} )\n    })\n  }\n\n  componentDidMount(){\n    this.getPeople()\n  }\n\n  render() {\n    const {people} = this.state;\n\n    return(\n      <div className=\"App\">\n        <List people = {people} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}